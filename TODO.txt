Current status:

- Working on ADI parser that takes a raw string and generates an AdiFile
  - Just finished refactoring parsing routines to store data in AdiParseState so
    that it's easier to look ahead 1-2 tokens, as we need to do to detect <eor>.
  - Next: parsing actual records?
- Back to the structures for the "physical" representation of the file ("ADI").
  - See XXXs and TODOs
  - Build out physical types?
- Build the higher level, in terms of an AdifFile (as opposed to AdiFile?) with
  an AdifHeader and list of AdifRecords (which would have maps of field names to
  field values).
- Then build the ADIF parser that takes as input an AdiFile and generates an
  AdifFile.
- Build a driver program (or a few?) with a few basic functions:
  - import file and report on it?
  - import file and export the parsed version again?

General issues:
- Pending refactor:
  - want to construct a ParseContext that has a current list of tokens so that I
    can un-consume tokens.  This might make sense as an iterator?  I'm not sure
    yet.
- I think it's a general bug that if there are two STRING tokens together, they
  don't get concatenated as they should.  Maybe this can be addressed with the
  above refactor?

